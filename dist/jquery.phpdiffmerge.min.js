/*!
* jQuery-Merge-for-php-diff v0.3.0 - Copyright (c) 2014 Hannes Diercks <github@xiphe.net> - License: MIT
*/
!function(a){"use strict";function b(b,c){this._id=1+g++,this.$el=a(b),this.options=a.extend({},f,c),this._defaults=f,this._name=e,this._init()}function c(b,c){this.$el=a(b),this.master=c,this._init()}function d(a,b){var c=window.open("popup.html");b=b.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;"),c.document.write("<html><head><title>"+a+"</title></head><body><pre>"+b+"</pre></body></html>")}var e="phpdiffmerge",f={left:"",right:"",debug:!1,pupupResult:!1,pupupSources:!1,merged:function(){}},g=0;b.prototype={$conflicts:a(),conflicts:[],toResolve:0,toMerge:0,inline:!1,result:"",lineOffset:0,_tmpLineOffset:0,_init:function(){var b=this;return b._debug("PHPDiffMerge about to be initiated with options:",b.options),b.$conflicts=b.$el.find(".ChangeReplace, .ChangeDelete, .ChangeInsert"),b.toResolve=b.$conflicts.length,b.toResolve<=0||""===b.options.left&&""===b.options.right?(b._debug("Nothing to merge or merge sources not available - Please submit left and right on plug-in initiation!"),!1):(this.inline=b.$el.hasClass("DifferencesInline"),b._ensurePresenceOfMergeButton(),a.each(b.$conflicts,function(){b.conflicts.push(new c(this,b))}),b.$conflicts.on("xiphe_phpdiffmerge_resolved",a.proxy(b._conflictResolved,b)),b.$conflicts.on("xiphe_phpdiffmerge_merged",a.proxy(b._conflictMerged,b)),b.$conflicts.on("xiphe_phpdiffmerge_merged",a.proxy(b._updateLineOffset,b)),void b._debug("PHPDiffMerge initiated",b))},useRight:function(){this.$conflicts.find("td.Right").click(),this.$el.hasClass("DifferencesInline")&&this.$el.find(".ChangeDelete td.Left").click().click()},useLeft:function(){this.$conflicts.find("td.Left").click(),this.$el.hasClass("DifferencesInline")&&this.$el.find(".ChangeInsert td.Right").click().click()},merge:function(a){if("undefined"!=typeof a&&null!==a&&a.preventDefault(),"disabled"===this.options.button.attr("disabled"))return void this._debug("Unable to merge: not all conflicts have been resolved.");this.result=this.options.left.slice(0),this.lineOffset=0,this.toMerge=this.$conflicts.length;for(var b=0;b<this.conflicts.length;b++)this.conflicts[b].merge()},option:function(b){a.isPlainObject(b)&&(this.options=a.extend(!0,this.options,b))},_ensurePresenceOfMergeButton:function(){"undefined"!=typeof this.options.button&&a(this.options.button).length?this.options.button=a(this.options.button).attr("disabled","disabled"):(this.options.button=a("<button />").html("Merge").attr("disabled","disabled").css({display:"block",height:"50px",width:"200px",margin:"50px auto"}),this.$el.after(this.options.button)),this.options.button.click(a.proxy(this.merge,this))},_debug:function(){this.options.debug&&window.console&&console.log&&console.log(Array.prototype.slice.call(arguments))},_conflictResolved:function(){this.toResolve--,0===this.toResolve&&this.options.button.removeAttr("disabled")},_conflictMerged:function(){this.toMerge--,0===this.toMerge&&(this.options.pupupResult&&d("end",this.result.join("\n")),this.options.pupupSources&&(d("left",this.options.left.join("\n")),d("right",this.options.right.join("\n"))),"function"==typeof this.options.merged&&this.options.merged.call(this,this.result,this.options.left,this.options.right))},_deleteResult:function(b,c){this._debug("Deleting Left: "+b+" - "+(b+c-1)+".");var d=this.result.splice(b+this.lineOffset-1,c);this.options.debug&&(d=d.map(function(b){return a.trim(b).substring(0,10)+"..."}),this._debug("Content: ",d)),this._tmpLineOffset-=c},_insertResult:function(b,c,d){for(var e=[],f=0;c>f;f++){var g=this.options.right[b-1+f];e.push(g),this.result.splice(d-1+this.lineOffset+f,0,g)}this.options.debug&&(this._debug("Left line prior to insertion: "+(d-1)),this._debug("Content: ",a.trim(this.result[d-2+this.lineOffset]).substring(0,10)),this._debug("Inserted Right: Row "+b+" - "+(b+c-1)+"."),e=e.map(function(b){return a.trim(b).substring(0,10)+"..."}),this._debug("Content: ("+e.join(", ")+")")),this._tmpLineOffset+=c},_updateLineOffset:function(){this._debug("Change lineOffset from: "+this.lineOffset+" to "+(this.lineOffset+this._tmpLineOffset)+"."),this.lineOffset+=this._tmpLineOffset,this._tmpLineOffset=0}},c.prototype={_resolved:!1,type:"",useLeft:!1,leftLine:0,rightLine:0,rowsLeft:0,rowsRight:0,_init:function(){this.type=this.$el.attr("class").match(/Change([\w]+)/)[1],this.$el.find("td").click(a.proxy(this._clicked,this)).hover(a.proxy(this._hoverIn,this),a.proxy(this._hoverOut,this)),this._setLine(),this._setRows(),this.master._debug("Conflict initiated:",this)},merge:function(){if(this.useLeft)return this.master._debug("Ignoring lines "+this.leftLine+" - "+(this.leftLine+this.rowsLeft-1)+"."),void this.$el.trigger("xiphe_phpdiffmerge_merged");switch(this.master._debug("Merging Conflict:",this),this.type){case"Replace":this._delete(),this._insert();break;case"Insert":this._insert();break;case"Delete":this._delete();break;default:return void h('Undefined merge method "'+this.type+'".')}this.$el.trigger("xiphe_phpdiffmerge_merged")},_hoverIn:function(b){var c=a(b.delegateTarget),d=c.hasClass("Left")?"Left":"Right";this.$el.find("td."+d).addClass("hover")},_hoverOut:function(){this.$el.find("td.hover").removeClass("hover")},_clicked:function(b){var c,d,e=a(b.delegateTarget);if(this.master.inline?(this.useLeft=e.hasClass("use"),e.hasClass("Left")&&(this.useLeft=!this.useLeft)):this.useLeft=e.hasClass("Left"),c=this.useLeft?"Left":"Right",d=this.useLeft?"Right":"Left",!this.master.inline||"Delete"!==this.type&&"Insert"!==this.type)this.$el.find("td."+c).removeClass("dontUse").addClass("use"),this.$el.find("td."+d).removeClass("use").addClass("dontUse");else{var f=this.$el.find("td");f.toggleClass("use"),f.toggleClass("dontUse",!f.hasClass("use"))}this._resolved||(this._resolved=!0,this.$el.trigger("xiphe_phpdiffmerge_resolved"))},_setLine:function(){var a=this.$el.prev("tbody").find("tr").last();this.leftLine=parseInt(a.find("th").first().html()||0,10)+1,this.rightLine=parseInt(a.find("th").last().html()||0,10)+1},_setRows:function(){var b=this;b.master.inline?(b.rowsLeft=b.$el.find(".Left").length,b.rowsRight=b.$el.find(".Right").length):(b.rowsLeft=0,b.$el.find(".Left").each(function(){"&nbsp;"!==a(this).prev("th").html()&&b.rowsLeft++}),b.rowsRight=0,b.$el.find(".Right").each(function(){"&nbsp;"!==a(this).prev("th").html()&&b.rowsRight++}))},_insert:function(){this.master._insertResult(this.rightLine,this.rowsRight,this.leftLine)},_delete:function(){this.master._deleteResult(this.leftLine,this.rowsLeft)}};var h=function(a){window.console&&window.console.error(a)};a.fn[e]=function(c){if("string"==typeof c){var d=Array.prototype.slice.call(arguments,1);this.each(function(){var b=a.data(this,"plugin_"+e);return b?a.isFunction(b[c])&&"_"!==c.charAt(0)?void b[c].apply(b,d):void h("no such method '"+c+"' for "+e+" instance"):void h("cannot call methods on "+e+" prior to initialization; attempted to call method '"+c+"'")})}else this.each(function(){var d=a.data(this,"plugin_"+e);d?(d.option(c),d._init()):a.data(this,"plugin_"+e,new b(this,c))});return this}}(jQuery);