/**
 * jQuery Merge for php-diff v0.2
 * 
 * A jQuery plugin for handling the conflicts between two documents.
 * Requires [php-diff](https://github.com/chrisboulton/php-diff) on the server side.
 * 
 * https://github.com/Xiphe/jQuery-Merge-for-php-diff
 * Distributed under GNU General Public License.
 */
(function(b){function h(a,d){this.$el=b(a);this.options=b.extend({},j,d);this._defaults=j;this._name=e;this._init()}function k(a,d){this.$el=b(a);this.master=d;this._init()}function f(a,b){var c=window.open("popup.html");b=b.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;");c.document.write("<html><head><title>"+a+"</title></head><body><pre>"+b+"</pre></body></html>")}var e="phpdiffmerge",j={left:"",right:"",debug:!1,pupupResult:!1,pupupSources:!1,merged:function(){}};
h.prototype={$conflicts:b(),conflicts:[],toResolve:0,toMerge:0,inline:!1,result:"",lineOffset:0,_init:function(){var a=this;a._debug("PHPDiffMerge about to be initiated with options:",a.options);a.$conflicts=a.$el.find(".ChangeReplace, .ChangeDelete, .ChangeInsert");a.toResolve=a.$conflicts.length;if(0>=a.toResolve||""===a.options.left&&""===a.options.right)return a._debug("Nothing to merge or merge sources not available - Please submit left and right on plug-in initiation!"),!1;this.inline=a.$el.hasClass("DifferencesInline");
a._ensurePresenceOfMergeButton();b.each(a.$conflicts,function(){a.conflicts.push(new k(this,a))});a.$conflicts.on("xiphe_phpdiffmerge_resolved",b.proxy(a._conflictResolved,a));a.$conflicts.on("xiphe_phpdiffmerge_merged",b.proxy(a._conflictMerged,a));a._debug("PHPDiffMerge initiated",a)},useRight:function(){this.$conflicts.find("td.Right").click();this.$el.hasClass("DifferencesInline")&&this.$el.find(".ChangeDelete td.Left").click().click()},useLeft:function(){this.$conflicts.find("td.Left").click();
this.$el.hasClass("DifferencesInline")&&this.$el.find(".ChangeInsert td.Right").click().click()},merge:function(a){"undefined"!==typeof a&&null!==a&&a.preventDefault();if("disabled"===this.options.button.attr("disabled"))this._debug("Unable to merge: not all conflicts have been resolved.");else{this.result=this.options.left.slice(0);this.lineOffset=0;this.toMerge=this.$conflicts.length;for(a=0;a<this.conflicts.length;a++)this.conflicts[a].merge()}},option:function(a){b.isPlainObject(a)&&(this.options=
b.extend(!0,this.options,a))},_ensurePresenceOfMergeButton:function(){"undefined"===typeof this.options.button||!b(this.options.button).length?(this.options.button=b("<button />").html("Merge").attr("disabled","disabled").css({display:"block",height:"50px",width:"200px",margin:"50px auto"}),this.$el.after(this.options.button)):this.options.button=b(this.options.button).attr("disabled","disabled");this.options.button.click(b.proxy(this.merge,this))},_debug:function(){this.options.debug&&(window.console&&
console.log)&&console.log(Array.prototype.slice.call(arguments))},_conflictResolved:function(){this.toResolve--;0===this.toResolve&&this.options.button.removeAttr("disabled")},_conflictMerged:function(){this.toMerge--;0===this.toMerge&&(this.options.pupupResult&&f("end",this.result.join("\n")),this.options.pupupSources&&(f("left",this.options.left.join("\n")),f("right",this.options.right.join("\n"))),"function"===typeof this.options.merged&&this.options.merged.call(this,this.result,this.options.left,
this.options.right))},_deleteResult:function(a,b){this._debug("Deleting Left: "+a+" - "+(a+b-1)+".");this.result.splice(a+this.lineOffset-1,b);this.lineOffset-=b},_insertResult:function(a,b){this._debug("Inserting Right: Row "+a+" - "+(a+b-1)+".");for(var c=0;c<b;c++)this.result.splice(a+this.lineOffset+c,0,this.options.right[a-1+c]);this.lineOffset+=b}};k.prototype={_resolved:!1,type:"",useLeft:!1,line:0,rowsLeft:0,rowsRight:0,_init:function(){this.type=this.$el.attr("class").match(/Change([\w]+)/)[1];
this.$el.find("td").click(b.proxy(this._clicked,this)).hover(b.proxy(this._hoverIn,this),b.proxy(this._hoverOut,this));this._setLine();this._setRows();this.master._debug("Conflict initiated:",this)},merge:function(){if(this.useLeft)this.master._debug("Ignoring lines "+this.line+" - "+(this.line+this.rowsLeft-1)+".");else switch(this.master._debug("Merging Conflict:",this),this.type){case "Replace":this._delete();this._insert();break;case "Insert":this._insert();break;case "Delete":this._delete();
break;default:g('Undefined merge method "'+this.type+'".');return}this.$el.trigger("xiphe_phpdiffmerge_merged")},_hoverIn:function(a){a=b(a.delegateTarget).hasClass("Left")?"Left":"Right";this.$el.find("td."+a).addClass("hover")},_hoverOut:function(){this.$el.find("td.hover").removeClass("hover")},_clicked:function(a){var d;a=(this.useLeft=b(a.delegateTarget).hasClass("Left"))?"Left":"Right";d=this.useLeft?"Right":"Left";this.master.inline&&("Delete"===this.type||"Insert"===this.type)?(a=this.$el.find("td"),
a.toggleClass("use"),a.toggleClass("dontUse",!a.hasClass("use"))):(this.$el.find("td."+a).removeClass("dontUse").addClass("use"),this.$el.find("td."+d).removeClass("use").addClass("dontUse"));this._resolved||(this._resolved=!0,this.$el.trigger("xiphe_phpdiffmerge_resolved"))},_setLine:function(){var a=this.$el.prev("tbody").find("tr").last().find("th").last();this.line=parseInt(a.html(),10);isNaN(this.line)?this.line=0:this.line++},_setRows:function(){var a=this;a.master.inline?(a.rowsLeft=a.$el.find(".Left").length,
a.rowsRight=a.$el.find(".Right").length):(a.rowsLeft=0,a.$el.find(".Left").each(function(){"&nbsp;"!==b(this).prev("th").html()&&a.rowsLeft++}),a.rowsRight=0,a.$el.find(".Right").each(function(){"&nbsp;"!==b(this).prev("th").html()&&a.rowsRight++}))},_insert:function(){this.master._insertResult(this.line,this.rowsRight)},_delete:function(){this.master._deleteResult(this.line,this.rowsLeft)}};var g=function(a){window.console&&window.console.error(a)};b.fn[e]=function(a){if("string"===typeof a){var d=
Array.prototype.slice.call(arguments,1);this.each(function(){var c=b.data(this,"plugin_"+e);c?!b.isFunction(c[a])||"_"===a.charAt(0)?g("no such method '"+a+"' for "+e+" instance"):c[a].apply(c,d):g("cannot call methods on "+e+" prior to initialization; attempted to call method '"+a+"'")})}else this.each(function(){var c=b.data(this,"plugin_"+e);c?(c.option(a),c._init()):b.data(this,"plugin_"+e,new h(this,a))});return this}})(jQuery);